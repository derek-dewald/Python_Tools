Model Name,Estimator Class,ModelType,Full Class Path,Primary Key,Part_2,Part_3,Part_4,Part_5,Hyperparameters
AdaBoostClassifier,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>,classifier,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>,sklearn.ensemble._weight_boosting.AdaBoostClassifier,ensemble,_weight_boosting,AdaBoostClassifier,,c
BaggingClassifier,<class 'sklearn.ensemble._bagging.BaggingClassifier'>,classifier,<class 'sklearn.ensemble._bagging.BaggingClassifier'>,sklearn.ensemble._bagging.BaggingClassifier,ensemble,_bagging,BaggingClassifier,,"['base_estimator', 'bootstrap', 'bootstrap_features', 'max_features', 'max_samples', 'n_estimators', 'n_jobs', 'oob_score', 'random_state', 'verbose', 'warm_start']"
BernoulliNB,<class 'sklearn.naive_bayes.BernoulliNB'>,classifier,<class 'sklearn.naive_bayes.BernoulliNB'>,sklearn.naive_bayes.BernoulliNB,naive_bayes,BernoulliNB,,,"['alpha', 'binarize', 'class_prior', 'fit_prior']"
CalibratedClassifierCV,<class 'sklearn.calibration.CalibratedClassifierCV'>,classifier,<class 'sklearn.calibration.CalibratedClassifierCV'>,sklearn.calibration.CalibratedClassifierCV,calibration,CalibratedClassifierCV,,,"['base_estimator', 'cv', 'ensemble', 'method', 'n_jobs']"
CategoricalNB,<class 'sklearn.naive_bayes.CategoricalNB'>,classifier,<class 'sklearn.naive_bayes.CategoricalNB'>,sklearn.naive_bayes.CategoricalNB,naive_bayes,CategoricalNB,,,"['alpha', 'class_prior', 'fit_prior', 'min_categories']"
ClassifierChain,<class 'sklearn.multioutput.ClassifierChain'>,classifier,<class 'sklearn.multioutput.ClassifierChain'>,sklearn.multioutput.ClassifierChain,multioutput,ClassifierChain,,,
ComplementNB,<class 'sklearn.naive_bayes.ComplementNB'>,classifier,<class 'sklearn.naive_bayes.ComplementNB'>,sklearn.naive_bayes.ComplementNB,naive_bayes,ComplementNB,,,"['alpha', 'class_prior', 'fit_prior', 'norm']"
DecisionTreeClassifier,<class 'sklearn.tree._classes.DecisionTreeClassifier'>,classifier,<class 'sklearn.tree._classes.DecisionTreeClassifier'>,sklearn.tree._classes.DecisionTreeClassifier,tree,_classes,DecisionTreeClassifier,,"['ccp_alpha', 'class_weight', 'criterion', 'max_depth', 'max_features', 'max_leaf_nodes', 'min_impurity_decrease', 'min_samples_leaf', 'min_samples_split', 'min_weight_fraction_leaf', 'random_state', 'splitter']"
DummyClassifier,<class 'sklearn.dummy.DummyClassifier'>,classifier,<class 'sklearn.dummy.DummyClassifier'>,sklearn.dummy.DummyClassifier,dummy,DummyClassifier,,,"['constant', 'random_state', 'strategy']"
ExtraTreeClassifier,<class 'sklearn.tree._classes.ExtraTreeClassifier'>,classifier,<class 'sklearn.tree._classes.ExtraTreeClassifier'>,sklearn.tree._classes.ExtraTreeClassifier,tree,_classes,ExtraTreeClassifier,,"['ccp_alpha', 'class_weight', 'criterion', 'max_depth', 'max_features', 'max_leaf_nodes', 'min_impurity_decrease', 'min_samples_leaf', 'min_samples_split', 'min_weight_fraction_leaf', 'random_state', 'splitter']"
ExtraTreesClassifier,<class 'sklearn.ensemble._forest.ExtraTreesClassifier'>,classifier,<class 'sklearn.ensemble._forest.ExtraTreesClassifier'>,sklearn.ensemble._forest.ExtraTreesClassifier,ensemble,_forest,ExtraTreesClassifier,,"['bootstrap', 'ccp_alpha', 'class_weight', 'criterion', 'max_depth', 'max_features', 'max_leaf_nodes', 'max_samples', 'min_impurity_decrease', 'min_samples_leaf', 'min_samples_split', 'min_weight_fraction_leaf', 'n_estimators', 'n_jobs', 'oob_score', 'random_state', 'verbose', 'warm_start']"
FixedThresholdClassifier,<class 'sklearn.model_selection._classification_threshold.FixedThresholdClassifier'>,classifier,<class 'sklearn.model_selection._classification_threshold.FixedThresholdClassifier'>,sklearn.model_selection._classification_threshold.FixedThresholdClassifier,model_selection,_classification_threshold,FixedThresholdClassifier,,
GaussianNB,<class 'sklearn.naive_bayes.GaussianNB'>,classifier,<class 'sklearn.naive_bayes.GaussianNB'>,sklearn.naive_bayes.GaussianNB,naive_bayes,GaussianNB,,,"['priors', 'var_smoothing']"
GaussianProcessClassifier,<class 'sklearn.gaussian_process._gpc.GaussianProcessClassifier'>,classifier,<class 'sklearn.gaussian_process._gpc.GaussianProcessClassifier'>,sklearn.gaussian_process._gpc.GaussianProcessClassifier,gaussian_process,_gpc,GaussianProcessClassifier,,"['copy_X_train', 'kernel', 'max_iter_predict', 'multi_class', 'n_jobs', 'n_restarts_optimizer', 'optimizer', 'random_state', 'warm_start']"
GradientBoostingClassifier,<class 'sklearn.ensemble._gb.GradientBoostingClassifier'>,classifier,<class 'sklearn.ensemble._gb.GradientBoostingClassifier'>,sklearn.ensemble._gb.GradientBoostingClassifier,ensemble,_gb,GradientBoostingClassifier,,"['ccp_alpha', 'criterion', 'init', 'learning_rate', 'loss', 'max_depth', 'max_features', 'max_leaf_nodes', 'min_impurity_decrease', 'min_samples_leaf', 'min_samples_split', 'min_weight_fraction_leaf', 'n_estimators', 'n_iter_no_change', 'random_state', 'subsample', 'tol', 'validation_fraction', 'verbose', 'warm_start']"
HistGradientBoostingClassifier,<class 'sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier'>,classifier,<class 'sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier'>,sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingClassifier,ensemble,_hist_gradient_boosting,gradient_boosting,HistGradientBoostingClassifier,"['categorical_features', 'early_stopping', 'l2_regularization', 'learning_rate', 'loss', 'max_bins', 'max_depth', 'max_iter', 'max_leaf_nodes', 'min_samples_leaf', 'monotonic_cst', 'n_iter_no_change', 'random_state', 'scoring', 'tol', 'validation_fraction', 'verbose', 'warm_start']"
KNeighborsClassifier,<class 'sklearn.neighbors._classification.KNeighborsClassifier'>,classifier,<class 'sklearn.neighbors._classification.KNeighborsClassifier'>,sklearn.neighbors._classification.KNeighborsClassifier,neighbors,_classification,KNeighborsClassifier,,"['algorithm', 'leaf_size', 'metric', 'metric_params', 'n_jobs', 'n_neighbors', 'p', 'weights']"
LabelPropagation,<class 'sklearn.semi_supervised._label_propagation.LabelPropagation'>,classifier,<class 'sklearn.semi_supervised._label_propagation.LabelPropagation'>,sklearn.semi_supervised._label_propagation.LabelPropagation,semi_supervised,_label_propagation,LabelPropagation,,"['gamma', 'kernel', 'max_iter', 'n_jobs', 'n_neighbors', 'tol']"
LabelSpreading,<class 'sklearn.semi_supervised._label_propagation.LabelSpreading'>,classifier,<class 'sklearn.semi_supervised._label_propagation.LabelSpreading'>,sklearn.semi_supervised._label_propagation.LabelSpreading,semi_supervised,_label_propagation,LabelSpreading,,"['alpha', 'gamma', 'kernel', 'max_iter', 'n_jobs', 'n_neighbors', 'tol']"
LinearDiscriminantAnalysis,<class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>,classifier,<class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>,sklearn.discriminant_analysis.LinearDiscriminantAnalysis,discriminant_analysis,LinearDiscriminantAnalysis,,,"['covariance_estimator', 'n_components', 'priors', 'shrinkage', 'solver', 'store_covariance', 'tol']"
LinearSVC,<class 'sklearn.svm._classes.LinearSVC'>,classifier,<class 'sklearn.svm._classes.LinearSVC'>,sklearn.svm._classes.LinearSVC,svm,_classes,LinearSVC,,"['C', 'class_weight', 'dual', 'fit_intercept', 'intercept_scaling', 'loss', 'max_iter', 'multi_class', 'penalty', 'random_state', 'tol', 'verbose']"
LogisticRegression,<class 'sklearn.linear_model._logistic.LogisticRegression'>,classifier,<class 'sklearn.linear_model._logistic.LogisticRegression'>,sklearn.linear_model._logistic.LogisticRegression,linear_model,_logistic,LogisticRegression,,"['C', 'class_weight', 'dual', 'fit_intercept', 'intercept_scaling', 'l1_ratio', 'max_iter', 'multi_class', 'n_jobs', 'penalty', 'random_state', 'solver', 'tol', 'verbose', 'warm_start']"
LogisticRegressionCV,<class 'sklearn.linear_model._logistic.LogisticRegressionCV'>,classifier,<class 'sklearn.linear_model._logistic.LogisticRegressionCV'>,sklearn.linear_model._logistic.LogisticRegressionCV,linear_model,_logistic,LogisticRegressionCV,,"['Cs', 'class_weight', 'cv', 'dual', 'fit_intercept', 'intercept_scaling', 'l1_ratios', 'max_iter', 'multi_class', 'n_jobs', 'penalty', 'random_state', 'refit', 'scoring', 'solver', 'tol', 'verbose']"
MLPClassifier,<class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>,classifier,<class 'sklearn.neural_network._multilayer_perceptron.MLPClassifier'>,sklearn.neural_network._multilayer_perceptron.MLPClassifier,neural_network,_multilayer_perceptron,MLPClassifier,,"['activation', 'alpha', 'batch_size', 'beta_1', 'beta_2', 'early_stopping', 'epsilon', 'hidden_layer_sizes', 'learning_rate', 'learning_rate_init', 'max_fun', 'max_iter', 'momentum', 'n_iter_no_change', 'nesterovs_momentum', 'power_t', 'random_state', 'shuffle', 'solver', 'tol', 'validation_fraction', 'verbose', 'warm_start']"
MultiOutputClassifier,<class 'sklearn.multioutput.MultiOutputClassifier'>,classifier,<class 'sklearn.multioutput.MultiOutputClassifier'>,sklearn.multioutput.MultiOutputClassifier,multioutput,MultiOutputClassifier,,,
MultinomialNB,<class 'sklearn.naive_bayes.MultinomialNB'>,classifier,<class 'sklearn.naive_bayes.MultinomialNB'>,sklearn.naive_bayes.MultinomialNB,naive_bayes,MultinomialNB,,,"['alpha', 'class_prior', 'fit_prior']"
NearestCentroid,<class 'sklearn.neighbors._nearest_centroid.NearestCentroid'>,classifier,<class 'sklearn.neighbors._nearest_centroid.NearestCentroid'>,sklearn.neighbors._nearest_centroid.NearestCentroid,neighbors,_nearest_centroid,NearestCentroid,,"['metric', 'shrink_threshold']"
NuSVC,<class 'sklearn.svm._classes.NuSVC'>,classifier,<class 'sklearn.svm._classes.NuSVC'>,sklearn.svm._classes.NuSVC,svm,_classes,NuSVC,,"['break_ties', 'cache_size', 'class_weight', 'coef0', 'decision_function_shape', 'degree', 'gamma', 'kernel', 'max_iter', 'nu', 'probability', 'random_state', 'shrinking', 'tol', 'verbose']"
OneVsOneClassifier,<class 'sklearn.multiclass.OneVsOneClassifier'>,classifier,<class 'sklearn.multiclass.OneVsOneClassifier'>,sklearn.multiclass.OneVsOneClassifier,multiclass,OneVsOneClassifier,,,
OneVsRestClassifier,<class 'sklearn.multiclass.OneVsRestClassifier'>,classifier,<class 'sklearn.multiclass.OneVsRestClassifier'>,sklearn.multiclass.OneVsRestClassifier,multiclass,OneVsRestClassifier,,,
OutputCodeClassifier,<class 'sklearn.multiclass.OutputCodeClassifier'>,classifier,<class 'sklearn.multiclass.OutputCodeClassifier'>,sklearn.multiclass.OutputCodeClassifier,multiclass,OutputCodeClassifier,,,
PassiveAggressiveClassifier,<class 'sklearn.linear_model._passive_aggressive.PassiveAggressiveClassifier'>,classifier,<class 'sklearn.linear_model._passive_aggressive.PassiveAggressiveClassifier'>,sklearn.linear_model._passive_aggressive.PassiveAggressiveClassifier,linear_model,_passive_aggressive,PassiveAggressiveClassifier,,"['C', 'average', 'class_weight', 'early_stopping', 'fit_intercept', 'loss', 'max_iter', 'n_iter_no_change', 'n_jobs', 'random_state', 'shuffle', 'tol', 'validation_fraction', 'verbose', 'warm_start']"
Perceptron,<class 'sklearn.linear_model._perceptron.Perceptron'>,classifier,<class 'sklearn.linear_model._perceptron.Perceptron'>,sklearn.linear_model._perceptron.Perceptron,linear_model,_perceptron,Perceptron,,"['alpha', 'class_weight', 'early_stopping', 'eta0', 'fit_intercept', 'l1_ratio', 'max_iter', 'n_iter_no_change', 'n_jobs', 'penalty', 'random_state', 'shuffle', 'tol', 'validation_fraction', 'verbose', 'warm_start']"
QuadraticDiscriminantAnalysis,<class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>,classifier,<class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>,sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis,discriminant_analysis,QuadraticDiscriminantAnalysis,,,"['priors', 'reg_param', 'store_covariance', 'tol']"
RadiusNeighborsClassifier,<class 'sklearn.neighbors._classification.RadiusNeighborsClassifier'>,classifier,<class 'sklearn.neighbors._classification.RadiusNeighborsClassifier'>,sklearn.neighbors._classification.RadiusNeighborsClassifier,neighbors,_classification,RadiusNeighborsClassifier,,"['algorithm', 'leaf_size', 'metric', 'metric_params', 'n_jobs', 'outlier_label', 'p', 'radius', 'weights']"
RandomForestClassifier,<class 'sklearn.ensemble._forest.RandomForestClassifier'>,classifier,<class 'sklearn.ensemble._forest.RandomForestClassifier'>,sklearn.ensemble._forest.RandomForestClassifier,ensemble,_forest,RandomForestClassifier,,"['bootstrap', 'ccp_alpha', 'class_weight', 'criterion', 'max_depth', 'max_features', 'max_leaf_nodes', 'max_samples', 'min_impurity_decrease', 'min_samples_leaf', 'min_samples_split', 'min_weight_fraction_leaf', 'n_estimators', 'n_jobs', 'oob_score', 'random_state', 'verbose', 'warm_start']"
RidgeClassifier,<class 'sklearn.linear_model._ridge.RidgeClassifier'>,classifier,<class 'sklearn.linear_model._ridge.RidgeClassifier'>,sklearn.linear_model._ridge.RidgeClassifier,linear_model,_ridge,RidgeClassifier,,"['alpha', 'class_weight', 'copy_X', 'fit_intercept', 'max_iter', 'normalize', 'positive', 'random_state', 'solver', 'tol']"
RidgeClassifierCV,<class 'sklearn.linear_model._ridge.RidgeClassifierCV'>,classifier,<class 'sklearn.linear_model._ridge.RidgeClassifierCV'>,sklearn.linear_model._ridge.RidgeClassifierCV,linear_model,_ridge,RidgeClassifierCV,,"['alphas', 'class_weight', 'cv', 'fit_intercept', 'normalize', 'scoring', 'store_cv_values']"
SGDClassifier,<class 'sklearn.linear_model._stochastic_gradient.SGDClassifier'>,classifier,<class 'sklearn.linear_model._stochastic_gradient.SGDClassifier'>,sklearn.linear_model._stochastic_gradient.SGDClassifier,linear_model,_stochastic_gradient,SGDClassifier,,"['alpha', 'average', 'class_weight', 'early_stopping', 'epsilon', 'eta0', 'fit_intercept', 'l1_ratio', 'learning_rate', 'loss', 'max_iter', 'n_iter_no_change', 'n_jobs', 'penalty', 'power_t', 'random_state', 'shuffle', 'tol', 'validation_fraction', 'verbose', 'warm_start']"
SVC,<class 'sklearn.svm._classes.SVC'>,classifier,<class 'sklearn.svm._classes.SVC'>,sklearn.svm._classes.SVC,svm,_classes,SVC,,"['C', 'break_ties', 'cache_size', 'class_weight', 'coef0', 'decision_function_shape', 'degree', 'gamma', 'kernel', 'max_iter', 'probability', 'random_state', 'shrinking', 'tol', 'verbose']"
SelfTrainingClassifier,<class 'sklearn.semi_supervised._self_training.SelfTrainingClassifier'>,classifier,<class 'sklearn.semi_supervised._self_training.SelfTrainingClassifier'>,sklearn.semi_supervised._self_training.SelfTrainingClassifier,semi_supervised,_self_training,SelfTrainingClassifier,,
StackingClassifier,<class 'sklearn.ensemble._stacking.StackingClassifier'>,classifier,<class 'sklearn.ensemble._stacking.StackingClassifier'>,sklearn.ensemble._stacking.StackingClassifier,ensemble,_stacking,StackingClassifier,,
TunedThresholdClassifierCV,<class 'sklearn.model_selection._classification_threshold.TunedThresholdClassifierCV'>,classifier,<class 'sklearn.model_selection._classification_threshold.TunedThresholdClassifierCV'>,sklearn.model_selection._classification_threshold.TunedThresholdClassifierCV,model_selection,_classification_threshold,TunedThresholdClassifierCV,,
VotingClassifier,<class 'sklearn.ensemble._voting.VotingClassifier'>,classifier,<class 'sklearn.ensemble._voting.VotingClassifier'>,sklearn.ensemble._voting.VotingClassifier,ensemble,_voting,VotingClassifier,,
ARDRegression,<class 'sklearn.linear_model._bayes.ARDRegression'>,regressor,<class 'sklearn.linear_model._bayes.ARDRegression'>,sklearn.linear_model._bayes.ARDRegression,linear_model,_bayes,ARDRegression,,"['alpha_1', 'alpha_2', 'compute_score', 'copy_X', 'fit_intercept', 'lambda_1', 'lambda_2', 'n_iter', 'normalize', 'threshold_lambda', 'tol', 'verbose']"
AdaBoostRegressor,<class 'sklearn.ensemble._weight_boosting.AdaBoostRegressor'>,regressor,<class 'sklearn.ensemble._weight_boosting.AdaBoostRegressor'>,sklearn.ensemble._weight_boosting.AdaBoostRegressor,ensemble,_weight_boosting,AdaBoostRegressor,,"['base_estimator', 'learning_rate', 'loss', 'n_estimators', 'random_state']"
BaggingRegressor,<class 'sklearn.ensemble._bagging.BaggingRegressor'>,regressor,<class 'sklearn.ensemble._bagging.BaggingRegressor'>,sklearn.ensemble._bagging.BaggingRegressor,ensemble,_bagging,BaggingRegressor,,"['base_estimator', 'bootstrap', 'bootstrap_features', 'max_features', 'max_samples', 'n_estimators', 'n_jobs', 'oob_score', 'random_state', 'verbose', 'warm_start']"
BayesianRidge,<class 'sklearn.linear_model._bayes.BayesianRidge'>,regressor,<class 'sklearn.linear_model._bayes.BayesianRidge'>,sklearn.linear_model._bayes.BayesianRidge,linear_model,_bayes,BayesianRidge,,"['alpha_1', 'alpha_2', 'alpha_init', 'compute_score', 'copy_X', 'fit_intercept', 'lambda_1', 'lambda_2', 'lambda_init', 'n_iter', 'normalize', 'tol', 'verbose']"
CCA,<class 'sklearn.cross_decomposition._pls.CCA'>,regressor,<class 'sklearn.cross_decomposition._pls.CCA'>,sklearn.cross_decomposition._pls.CCA,cross_decomposition,_pls,CCA,,"['copy', 'max_iter', 'n_components', 'scale', 'tol']"
DecisionTreeRegressor,<class 'sklearn.tree._classes.DecisionTreeRegressor'>,regressor,<class 'sklearn.tree._classes.DecisionTreeRegressor'>,sklearn.tree._classes.DecisionTreeRegressor,tree,_classes,DecisionTreeRegressor,,"['ccp_alpha', 'criterion', 'max_depth', 'max_features', 'max_leaf_nodes', 'min_impurity_decrease', 'min_samples_leaf', 'min_samples_split', 'min_weight_fraction_leaf', 'random_state', 'splitter']"
DummyRegressor,<class 'sklearn.dummy.DummyRegressor'>,regressor,<class 'sklearn.dummy.DummyRegressor'>,sklearn.dummy.DummyRegressor,dummy,DummyRegressor,,,"['constant', 'quantile', 'strategy']"
ElasticNet,<class 'sklearn.linear_model._coordinate_descent.ElasticNet'>,regressor,<class 'sklearn.linear_model._coordinate_descent.ElasticNet'>,sklearn.linear_model._coordinate_descent.ElasticNet,linear_model,_coordinate_descent,ElasticNet,,"['alpha', 'copy_X', 'fit_intercept', 'l1_ratio', 'max_iter', 'normalize', 'positive', 'precompute', 'random_state', 'selection', 'tol', 'warm_start']"
ElasticNetCV,<class 'sklearn.linear_model._coordinate_descent.ElasticNetCV'>,regressor,<class 'sklearn.linear_model._coordinate_descent.ElasticNetCV'>,sklearn.linear_model._coordinate_descent.ElasticNetCV,linear_model,_coordinate_descent,ElasticNetCV,,"['alphas', 'copy_X', 'cv', 'eps', 'fit_intercept', 'l1_ratio', 'max_iter', 'n_alphas', 'n_jobs', 'normalize', 'positive', 'precompute', 'random_state', 'selection', 'tol', 'verbose']"
ExtraTreeRegressor,<class 'sklearn.tree._classes.ExtraTreeRegressor'>,regressor,<class 'sklearn.tree._classes.ExtraTreeRegressor'>,sklearn.tree._classes.ExtraTreeRegressor,tree,_classes,ExtraTreeRegressor,,"['ccp_alpha', 'criterion', 'max_depth', 'max_features', 'max_leaf_nodes', 'min_impurity_decrease', 'min_samples_leaf', 'min_samples_split', 'min_weight_fraction_leaf', 'random_state', 'splitter']"
ExtraTreesRegressor,<class 'sklearn.ensemble._forest.ExtraTreesRegressor'>,regressor,<class 'sklearn.ensemble._forest.ExtraTreesRegressor'>,sklearn.ensemble._forest.ExtraTreesRegressor,ensemble,_forest,ExtraTreesRegressor,,"['bootstrap', 'ccp_alpha', 'criterion', 'max_depth', 'max_features', 'max_leaf_nodes', 'max_samples', 'min_impurity_decrease', 'min_samples_leaf', 'min_samples_split', 'min_weight_fraction_leaf', 'n_estimators', 'n_jobs', 'oob_score', 'random_state', 'verbose', 'warm_start']"
GammaRegressor,<class 'sklearn.linear_model._glm.glm.GammaRegressor'>,regressor,<class 'sklearn.linear_model._glm.glm.GammaRegressor'>,sklearn.linear_model._glm.glm.GammaRegressor,linear_model,_glm,glm,GammaRegressor,"['alpha', 'fit_intercept', 'max_iter', 'tol', 'verbose', 'warm_start']"
GaussianProcessRegressor,<class 'sklearn.gaussian_process._gpr.GaussianProcessRegressor'>,regressor,<class 'sklearn.gaussian_process._gpr.GaussianProcessRegressor'>,sklearn.gaussian_process._gpr.GaussianProcessRegressor,gaussian_process,_gpr,GaussianProcessRegressor,,"['alpha', 'copy_X_train', 'kernel', 'n_restarts_optimizer', 'normalize_y', 'optimizer', 'random_state']"
GradientBoostingRegressor,<class 'sklearn.ensemble._gb.GradientBoostingRegressor'>,regressor,<class 'sklearn.ensemble._gb.GradientBoostingRegressor'>,sklearn.ensemble._gb.GradientBoostingRegressor,ensemble,_gb,GradientBoostingRegressor,,"['alpha', 'ccp_alpha', 'criterion', 'init', 'learning_rate', 'loss', 'max_depth', 'max_features', 'max_leaf_nodes', 'min_impurity_decrease', 'min_samples_leaf', 'min_samples_split', 'min_weight_fraction_leaf', 'n_estimators', 'n_iter_no_change', 'random_state', 'subsample', 'tol', 'validation_fraction', 'verbose', 'warm_start']"
HistGradientBoostingRegressor,<class 'sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingRegressor'>,regressor,<class 'sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingRegressor'>,sklearn.ensemble._hist_gradient_boosting.gradient_boosting.HistGradientBoostingRegressor,ensemble,_hist_gradient_boosting,gradient_boosting,HistGradientBoostingRegressor,"['categorical_features', 'early_stopping', 'l2_regularization', 'learning_rate', 'loss', 'max_bins', 'max_depth', 'max_iter', 'max_leaf_nodes', 'min_samples_leaf', 'monotonic_cst', 'n_iter_no_change', 'quantile', 'random_state', 'scoring', 'tol', 'validation_fraction', 'verbose', 'warm_start']"
HuberRegressor,<class 'sklearn.linear_model._huber.HuberRegressor'>,regressor,<class 'sklearn.linear_model._huber.HuberRegressor'>,sklearn.linear_model._huber.HuberRegressor,linear_model,_huber,HuberRegressor,,"['alpha', 'epsilon', 'fit_intercept', 'max_iter', 'tol', 'warm_start']"
IsotonicRegression,<class 'sklearn.isotonic.IsotonicRegression'>,regressor,<class 'sklearn.isotonic.IsotonicRegression'>,sklearn.isotonic.IsotonicRegression,isotonic,IsotonicRegression,,,"['increasing', 'out_of_bounds', 'y_max', 'y_min']"
KNeighborsRegressor,<class 'sklearn.neighbors._regression.KNeighborsRegressor'>,regressor,<class 'sklearn.neighbors._regression.KNeighborsRegressor'>,sklearn.neighbors._regression.KNeighborsRegressor,neighbors,_regression,KNeighborsRegressor,,"['algorithm', 'leaf_size', 'metric', 'metric_params', 'n_jobs', 'n_neighbors', 'p', 'weights']"
KernelRidge,<class 'sklearn.kernel_ridge.KernelRidge'>,regressor,<class 'sklearn.kernel_ridge.KernelRidge'>,sklearn.kernel_ridge.KernelRidge,kernel_ridge,KernelRidge,,,"['alpha', 'coef0', 'degree', 'gamma', 'kernel', 'kernel_params']"
Lars,<class 'sklearn.linear_model._least_angle.Lars'>,regressor,<class 'sklearn.linear_model._least_angle.Lars'>,sklearn.linear_model._least_angle.Lars,linear_model,_least_angle,Lars,,"['copy_X', 'eps', 'fit_intercept', 'fit_path', 'jitter', 'n_nonzero_coefs', 'normalize', 'precompute', 'random_state', 'verbose']"
LarsCV,<class 'sklearn.linear_model._least_angle.LarsCV'>,regressor,<class 'sklearn.linear_model._least_angle.LarsCV'>,sklearn.linear_model._least_angle.LarsCV,linear_model,_least_angle,LarsCV,,"['copy_X', 'cv', 'eps', 'fit_intercept', 'max_iter', 'max_n_alphas', 'n_jobs', 'normalize', 'precompute', 'verbose']"
Lasso,<class 'sklearn.linear_model._coordinate_descent.Lasso'>,regressor,<class 'sklearn.linear_model._coordinate_descent.Lasso'>,sklearn.linear_model._coordinate_descent.Lasso,linear_model,_coordinate_descent,Lasso,,"['alpha', 'copy_X', 'fit_intercept', 'max_iter', 'normalize', 'positive', 'precompute', 'random_state', 'selection', 'tol', 'warm_start']"
LassoCV,<class 'sklearn.linear_model._coordinate_descent.LassoCV'>,regressor,<class 'sklearn.linear_model._coordinate_descent.LassoCV'>,sklearn.linear_model._coordinate_descent.LassoCV,linear_model,_coordinate_descent,LassoCV,,"['alphas', 'copy_X', 'cv', 'eps', 'fit_intercept', 'max_iter', 'n_alphas', 'n_jobs', 'normalize', 'positive', 'precompute', 'random_state', 'selection', 'tol', 'verbose']"
LassoLars,<class 'sklearn.linear_model._least_angle.LassoLars'>,regressor,<class 'sklearn.linear_model._least_angle.LassoLars'>,sklearn.linear_model._least_angle.LassoLars,linear_model,_least_angle,LassoLars,,"['alpha', 'copy_X', 'eps', 'fit_intercept', 'fit_path', 'jitter', 'max_iter', 'normalize', 'positive', 'precompute', 'random_state', 'verbose']"
LassoLarsCV,<class 'sklearn.linear_model._least_angle.LassoLarsCV'>,regressor,<class 'sklearn.linear_model._least_angle.LassoLarsCV'>,sklearn.linear_model._least_angle.LassoLarsCV,linear_model,_least_angle,LassoLarsCV,,"['copy_X', 'cv', 'eps', 'fit_intercept', 'max_iter', 'max_n_alphas', 'n_jobs', 'normalize', 'positive', 'precompute', 'verbose']"
LassoLarsIC,<class 'sklearn.linear_model._least_angle.LassoLarsIC'>,regressor,<class 'sklearn.linear_model._least_angle.LassoLarsIC'>,sklearn.linear_model._least_angle.LassoLarsIC,linear_model,_least_angle,LassoLarsIC,,"['copy_X', 'criterion', 'eps', 'fit_intercept', 'max_iter', 'noise_variance', 'normalize', 'positive', 'precompute', 'verbose']"
LinearRegression,<class 'sklearn.linear_model._base.LinearRegression'>,regressor,<class 'sklearn.linear_model._base.LinearRegression'>,sklearn.linear_model._base.LinearRegression,linear_model,_base,LinearRegression,,"['copy_X', 'fit_intercept', 'n_jobs', 'normalize', 'positive']"
LinearSVR,<class 'sklearn.svm._classes.LinearSVR'>,regressor,<class 'sklearn.svm._classes.LinearSVR'>,sklearn.svm._classes.LinearSVR,svm,_classes,LinearSVR,,"['C', 'dual', 'epsilon', 'fit_intercept', 'intercept_scaling', 'loss', 'max_iter', 'random_state', 'tol', 'verbose']"
MLPRegressor,<class 'sklearn.neural_network._multilayer_perceptron.MLPRegressor'>,regressor,<class 'sklearn.neural_network._multilayer_perceptron.MLPRegressor'>,sklearn.neural_network._multilayer_perceptron.MLPRegressor,neural_network,_multilayer_perceptron,MLPRegressor,,"['activation', 'alpha', 'batch_size', 'beta_1', 'beta_2', 'early_stopping', 'epsilon', 'hidden_layer_sizes', 'learning_rate', 'learning_rate_init', 'max_fun', 'max_iter', 'momentum', 'n_iter_no_change', 'nesterovs_momentum', 'power_t', 'random_state', 'shuffle', 'solver', 'tol', 'validation_fraction', 'verbose', 'warm_start']"
MultiOutputRegressor,<class 'sklearn.multioutput.MultiOutputRegressor'>,regressor,<class 'sklearn.multioutput.MultiOutputRegressor'>,sklearn.multioutput.MultiOutputRegressor,multioutput,MultiOutputRegressor,,,
MultiTaskElasticNet,<class 'sklearn.linear_model._coordinate_descent.MultiTaskElasticNet'>,regressor,<class 'sklearn.linear_model._coordinate_descent.MultiTaskElasticNet'>,sklearn.linear_model._coordinate_descent.MultiTaskElasticNet,linear_model,_coordinate_descent,MultiTaskElasticNet,,"['alpha', 'copy_X', 'fit_intercept', 'l1_ratio', 'max_iter', 'normalize', 'random_state', 'selection', 'tol', 'warm_start']"
MultiTaskElasticNetCV,<class 'sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV'>,regressor,<class 'sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV'>,sklearn.linear_model._coordinate_descent.MultiTaskElasticNetCV,linear_model,_coordinate_descent,MultiTaskElasticNetCV,,"['alphas', 'copy_X', 'cv', 'eps', 'fit_intercept', 'l1_ratio', 'max_iter', 'n_alphas', 'n_jobs', 'normalize', 'random_state', 'selection', 'tol', 'verbose']"
MultiTaskLasso,<class 'sklearn.linear_model._coordinate_descent.MultiTaskLasso'>,regressor,<class 'sklearn.linear_model._coordinate_descent.MultiTaskLasso'>,sklearn.linear_model._coordinate_descent.MultiTaskLasso,linear_model,_coordinate_descent,MultiTaskLasso,,"['alpha', 'copy_X', 'fit_intercept', 'max_iter', 'normalize', 'random_state', 'selection', 'tol', 'warm_start']"
MultiTaskLassoCV,<class 'sklearn.linear_model._coordinate_descent.MultiTaskLassoCV'>,regressor,<class 'sklearn.svm._classes.NuSVR'>,sklearn.svm._classes.NuSVR,svm,_classes,NuSVR,,"['C', 'cache_size', 'coef0', 'degree', 'gamma', 'kernel', 'max_iter', 'nu', 'shrinking', 'tol', 'verbose']"
NuSVR,<class 'sklearn.svm._classes.NuSVR'>,regressor,<class 'sklearn.linear_model._omp.OrthogonalMatchingPursuit'>,sklearn.linear_model._omp.OrthogonalMatchingPursuit,linear_model,_omp,OrthogonalMatchingPursuit,,"['fit_intercept', 'n_nonzero_coefs', 'normalize', 'precompute', 'tol']"
OrthogonalMatchingPursuit,<class 'sklearn.linear_model._omp.OrthogonalMatchingPursuit'>,,,,,,,,
OrthogonalMatchingPursuitCV,<class 'sklearn.linear_model._omp.OrthogonalMatchingPursuitCV'>,regressor,<class 'sklearn.linear_model._omp.OrthogonalMatchingPursuitCV'>,sklearn.linear_model._omp.OrthogonalMatchingPursuitCV,linear_model,_omp,OrthogonalMatchingPursuitCV,,"['copy', 'cv', 'fit_intercept', 'max_iter', 'n_jobs', 'normalize', 'verbose']"
PLSCanonical,<class 'sklearn.cross_decomposition._pls.PLSCanonical'>,regressor,<class 'sklearn.cross_decomposition._pls.PLSCanonical'>,sklearn.cross_decomposition._pls.PLSCanonical,cross_decomposition,_pls,PLSCanonical,,"['algorithm', 'copy', 'max_iter', 'n_components', 'scale', 'tol']"
PLSRegression,<class 'sklearn.cross_decomposition._pls.PLSRegression'>,regressor,<class 'sklearn.cross_decomposition._pls.PLSRegression'>,sklearn.cross_decomposition._pls.PLSRegression,cross_decomposition,_pls,PLSRegression,,"['copy', 'max_iter', 'n_components', 'scale', 'tol']"
PassiveAggressiveRegressor,<class 'sklearn.linear_model._passive_aggressive.PassiveAggressiveRegressor'>,regressor,<class 'sklearn.linear_model._passive_aggressive.PassiveAggressiveRegressor'>,sklearn.linear_model._passive_aggressive.PassiveAggressiveRegressor,linear_model,_passive_aggressive,PassiveAggressiveRegressor,,"['C', 'average', 'early_stopping', 'epsilon', 'fit_intercept', 'loss', 'max_iter', 'n_iter_no_change', 'random_state', 'shuffle', 'tol', 'validation_fraction', 'verbose', 'warm_start']"
PoissonRegressor,<class 'sklearn.linear_model._glm.glm.PoissonRegressor'>,regressor,<class 'sklearn.linear_model._glm.glm.PoissonRegressor'>,sklearn.linear_model._glm.glm.PoissonRegressor,linear_model,_glm,glm,PoissonRegressor,"['alpha', 'fit_intercept', 'max_iter', 'tol', 'verbose', 'warm_start']"
QuantileRegressor,<class 'sklearn.linear_model._quantile.QuantileRegressor'>,regressor,<class 'sklearn.linear_model._quantile.QuantileRegressor'>,sklearn.linear_model._quantile.QuantileRegressor,linear_model,_quantile,QuantileRegressor,,"['alpha', 'fit_intercept', 'quantile', 'solver', 'solver_options']"
RANSACRegressor,<class 'sklearn.linear_model._ransac.RANSACRegressor'>,regressor,<class 'sklearn.linear_model._ransac.RANSACRegressor'>,sklearn.linear_model._ransac.RANSACRegressor,linear_model,_ransac,RANSACRegressor,,"['base_estimator', 'estimator', 'is_data_valid', 'is_model_valid', 'loss', 'max_skips', 'max_trials', 'min_samples', 'random_state', 'residual_threshold', 'stop_n_inliers', 'stop_probability', 'stop_score']"
RadiusNeighborsRegressor,<class 'sklearn.neighbors._regression.RadiusNeighborsRegressor'>,regressor,<class 'sklearn.neighbors._regression.RadiusNeighborsRegressor'>,sklearn.neighbors._regression.RadiusNeighborsRegressor,neighbors,_regression,RadiusNeighborsRegressor,,"['algorithm', 'leaf_size', 'metric', 'metric_params', 'n_jobs', 'p', 'radius', 'weights']"
RandomForestRegressor,<class 'sklearn.ensemble._forest.RandomForestRegressor'>,regressor,<class 'sklearn.ensemble._forest.RandomForestRegressor'>,sklearn.ensemble._forest.RandomForestRegressor,ensemble,_forest,RandomForestRegressor,,"['bootstrap', 'ccp_alpha', 'criterion', 'max_depth', 'max_features', 'max_leaf_nodes', 'max_samples', 'min_impurity_decrease', 'min_samples_leaf', 'min_samples_split', 'min_weight_fraction_leaf', 'n_estimators', 'n_jobs', 'oob_score', 'random_state', 'verbose', 'warm_start']"
RegressorChain,<class 'sklearn.multioutput.RegressorChain'>,regressor,<class 'sklearn.multioutput.RegressorChain'>,sklearn.multioutput.RegressorChain,multioutput,RegressorChain,,,
Ridge,<class 'sklearn.linear_model._ridge.Ridge'>,regressor,<class 'sklearn.linear_model._ridge.Ridge'>,sklearn.linear_model._ridge.Ridge,linear_model,_ridge,Ridge,,"['alpha', 'copy_X', 'fit_intercept', 'max_iter', 'normalize', 'positive', 'random_state', 'solver', 'tol']"
RidgeCV,<class 'sklearn.linear_model._ridge.RidgeCV'>,regressor,<class 'sklearn.linear_model._ridge.RidgeCV'>,sklearn.linear_model._ridge.RidgeCV,linear_model,_ridge,RidgeCV,,"['alpha_per_target', 'alphas', 'cv', 'fit_intercept', 'gcv_mode', 'normalize', 'scoring', 'store_cv_values']"
SGDRegressor,<class 'sklearn.linear_model._stochastic_gradient.SGDRegressor'>,regressor,<class 'sklearn.linear_model._stochastic_gradient.SGDRegressor'>,sklearn.linear_model._stochastic_gradient.SGDRegressor,linear_model,_stochastic_gradient,SGDRegressor,,"['alpha', 'average', 'early_stopping', 'epsilon', 'eta0', 'fit_intercept', 'l1_ratio', 'learning_rate', 'loss', 'max_iter', 'n_iter_no_change', 'penalty', 'power_t', 'random_state', 'shuffle', 'tol', 'validation_fraction', 'verbose', 'warm_start']"
SVR,<class 'sklearn.svm._classes.SVR'>,regressor,<class 'sklearn.svm._classes.SVR'>,sklearn.svm._classes.SVR,svm,_classes,SVR,,"['C', 'cache_size', 'coef0', 'degree', 'epsilon', 'gamma', 'kernel', 'max_iter', 'shrinking', 'tol', 'verbose']"
StackingRegressor,<class 'sklearn.ensemble._stacking.StackingRegressor'>,regressor,<class 'sklearn.ensemble._stacking.StackingRegressor'>,sklearn.ensemble._stacking.StackingRegressor,ensemble,_stacking,StackingRegressor,,
TheilSenRegressor,<class 'sklearn.linear_model._theil_sen.TheilSenRegressor'>,regressor,<class 'sklearn.linear_model._theil_sen.TheilSenRegressor'>,sklearn.linear_model._theil_sen.TheilSenRegressor,linear_model,_theil_sen,TheilSenRegressor,,"['copy_X', 'fit_intercept', 'max_iter', 'max_subpopulation', 'n_jobs', 'n_subsamples', 'random_state', 'tol', 'verbose']"
TransformedTargetRegressor,<class 'sklearn.compose._target.TransformedTargetRegressor'>,regressor,<class 'sklearn.compose._target.TransformedTargetRegressor'>,sklearn.compose._target.TransformedTargetRegressor,compose,_target,TransformedTargetRegressor,,"['check_inverse', 'func', 'inverse_func', 'regressor', 'transformer']"
TweedieRegressor,<class 'sklearn.linear_model._glm.glm.TweedieRegressor'>,regressor,<class 'sklearn.linear_model._glm.glm.TweedieRegressor'>,sklearn.linear_model._glm.glm.TweedieRegressor,linear_model,_glm,glm,TweedieRegressor,"['alpha', 'fit_intercept', 'link', 'max_iter', 'power', 'tol', 'verbose', 'warm_start']"
VotingRegressor,<class 'sklearn.ensemble._voting.VotingRegressor'>,regressor,<class 'sklearn.ensemble._voting.VotingRegressor'>,sklearn.ensemble._voting.VotingRegressor,ensemble,_voting,VotingRegressor,,
AffinityPropagation,<class 'sklearn.cluster._affinity_propagation.AffinityPropagation'>,cluster,<class 'sklearn.cluster._affinity_propagation.AffinityPropagation'>,sklearn.cluster._affinity_propagation.AffinityPropagation,cluster,_affinity_propagation,AffinityPropagation,,"['affinity', 'convergence_iter', 'copy', 'damping', 'max_iter', 'preference', 'random_state', 'verbose']"
AgglomerativeClustering,<class 'sklearn.cluster._agglomerative.AgglomerativeClustering'>,cluster,<class 'sklearn.cluster._agglomerative.AgglomerativeClustering'>,sklearn.cluster._agglomerative.AgglomerativeClustering,cluster,_agglomerative,AgglomerativeClustering,,"['affinity', 'compute_distances', 'compute_full_tree', 'connectivity', 'distance_threshold', 'linkage', 'memory', 'n_clusters']"
Birch,<class 'sklearn.cluster._birch.Birch'>,cluster,<class 'sklearn.cluster._birch.Birch'>,sklearn.cluster._birch.Birch,cluster,_birch,Birch,,"['branching_factor', 'compute_labels', 'copy', 'n_clusters', 'threshold']"
BisectingKMeans,<class 'sklearn.cluster._bisect_k_means.BisectingKMeans'>,cluster,<class 'sklearn.cluster._bisect_k_means.BisectingKMeans'>,sklearn.cluster._bisect_k_means.BisectingKMeans,cluster,_bisect_k_means,BisectingKMeans,,"['algorithm', 'bisecting_strategy', 'copy_x', 'init', 'max_iter', 'n_clusters', 'n_init', 'random_state', 'tol', 'verbose']"
DBSCAN,<class 'sklearn.cluster._dbscan.DBSCAN'>,cluster,<class 'sklearn.cluster._dbscan.DBSCAN'>,sklearn.cluster._dbscan.DBSCAN,cluster,_dbscan,DBSCAN,,"['algorithm', 'eps', 'leaf_size', 'metric', 'metric_params', 'min_samples', 'n_jobs', 'p']"
FeatureAgglomeration,<class 'sklearn.cluster._agglomerative.FeatureAgglomeration'>,cluster,<class 'sklearn.cluster._agglomerative.FeatureAgglomeration'>,sklearn.cluster._agglomerative.FeatureAgglomeration,cluster,_agglomerative,FeatureAgglomeration,,"['affinity', 'compute_distances', 'compute_full_tree', 'connectivity', 'distance_threshold', 'linkage', 'memory', 'n_clusters', 'pooling_func']"
HDBSCAN,<class 'sklearn.cluster._hdbscan.hdbscan.HDBSCAN'>,cluster,<class 'sklearn.cluster._hdbscan.hdbscan.HDBSCAN'>,sklearn.cluster._hdbscan.hdbscan.HDBSCAN,cluster,_hdbscan,hdbscan,HDBSCAN,
KMeans,<class 'sklearn.cluster._kmeans.KMeans'>,cluster,<class 'sklearn.cluster._kmeans.KMeans'>,sklearn.cluster._kmeans.KMeans,cluster,_kmeans,KMeans,,"['algorithm', 'copy_x', 'init', 'max_iter', 'n_clusters', 'n_init', 'random_state', 'tol', 'verbose']"
MeanShift,<class 'sklearn.cluster._mean_shift.MeanShift'>,cluster,<class 'sklearn.cluster._mean_shift.MeanShift'>,sklearn.cluster._mean_shift.MeanShift,cluster,_mean_shift,MeanShift,,"['bandwidth', 'bin_seeding', 'cluster_all', 'max_iter', 'min_bin_freq', 'n_jobs', 'seeds']"
MiniBatchKMeans,<class 'sklearn.cluster._kmeans.MiniBatchKMeans'>,cluster,<class 'sklearn.cluster._kmeans.MiniBatchKMeans'>,sklearn.cluster._kmeans.MiniBatchKMeans,cluster,_kmeans,MiniBatchKMeans,,"['batch_size', 'compute_labels', 'init', 'init_size', 'max_iter', 'max_no_improvement', 'n_clusters', 'n_init', 'random_state', 'reassignment_ratio', 'tol', 'verbose']"
OPTICS,<class 'sklearn.cluster._optics.OPTICS'>,cluster,<class 'sklearn.cluster._optics.OPTICS'>,sklearn.cluster._optics.OPTICS,cluster,_optics,OPTICS,,"['algorithm', 'cluster_method', 'eps', 'leaf_size', 'max_eps', 'memory', 'metric', 'metric_params', 'min_cluster_size', 'min_samples', 'n_jobs', 'p', 'predecessor_correction', 'xi']"
SpectralClustering,<class 'sklearn.cluster._spectral.SpectralClustering'>,cluster,<class 'sklearn.cluster._spectral.SpectralClustering'>,sklearn.cluster._spectral.SpectralClustering,cluster,_spectral,SpectralClustering,,"['affinity', 'assign_labels', 'coef0', 'degree', 'eigen_solver', 'eigen_tol', 'gamma', 'kernel_params', 'n_clusters', 'n_components', 'n_init', 'n_jobs', 'n_neighbors', 'random_state', 'verbose']"
AdditiveChi2Sampler,<class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>,transformer,<class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>,sklearn.kernel_approximation.AdditiveChi2Sampler,kernel_approximation,AdditiveChi2Sampler,,,"['sample_interval', 'sample_steps']"
BernoulliRBM,<class 'sklearn.neural_network._rbm.BernoulliRBM'>,transformer,<class 'sklearn.neural_network._rbm.BernoulliRBM'>,sklearn.neural_network._rbm.BernoulliRBM,neural_network,_rbm,BernoulliRBM,,"['batch_size', 'learning_rate', 'n_components', 'n_iter', 'random_state', 'verbose']"
Binarizer,<class 'sklearn.preprocessing._data.Binarizer'>,transformer,<class 'sklearn.preprocessing._data.Binarizer'>,sklearn.preprocessing._data.Binarizer,preprocessing,_data,Binarizer,,"['copy', 'threshold']"
ColumnTransformer,<class 'sklearn.compose._column_transformer.ColumnTransformer'>,transformer,<class 'sklearn.compose._column_transformer.ColumnTransformer'>,sklearn.compose._column_transformer.ColumnTransformer,compose,_column_transformer,ColumnTransformer,,
DictVectorizer,<class 'sklearn.feature_extraction._dict_vectorizer.DictVectorizer'>,transformer,<class 'sklearn.feature_extraction._dict_vectorizer.DictVectorizer'>,sklearn.feature_extraction._dict_vectorizer.DictVectorizer,feature_extraction,_dict_vectorizer,DictVectorizer,,"['dtype', 'separator', 'sort', 'sparse']"
DictionaryLearning,<class 'sklearn.decomposition._dict_learning.DictionaryLearning'>,transformer,<class 'sklearn.decomposition._dict_learning.DictionaryLearning'>,sklearn.decomposition._dict_learning.DictionaryLearning,decomposition,_dict_learning,DictionaryLearning,,"['alpha', 'code_init', 'dict_init', 'fit_algorithm', 'max_iter', 'n_components', 'n_jobs', 'positive_code', 'positive_dict', 'random_state', 'split_sign', 'tol', 'transform_algorithm', 'transform_alpha', 'transform_max_iter', 'transform_n_nonzero_coefs', 'verbose']"
FactorAnalysis,<class 'sklearn.decomposition._factor_analysis.FactorAnalysis'>,transformer,<class 'sklearn.decomposition._factor_analysis.FactorAnalysis'>,sklearn.decomposition._factor_analysis.FactorAnalysis,decomposition,_factor_analysis,FactorAnalysis,,"['copy', 'iterated_power', 'max_iter', 'n_components', 'noise_variance_init', 'random_state', 'rotation', 'svd_method', 'tol']"
FastICA,<class 'sklearn.decomposition._fastica.FastICA'>,transformer,<class 'sklearn.decomposition._fastica.FastICA'>,sklearn.decomposition._fastica.FastICA,decomposition,_fastica,FastICA,,"['algorithm', 'fun', 'fun_args', 'max_iter', 'n_components', 'random_state', 'tol', 'w_init', 'whiten']"
FeatureHasher,<class 'sklearn.feature_extraction._hash.FeatureHasher'>,transformer,<class 'sklearn.feature_extraction._hash.FeatureHasher'>,sklearn.feature_extraction._hash.FeatureHasher,feature_extraction,_hash,FeatureHasher,,"['alternate_sign', 'dtype', 'input_type', 'n_features']"
FeatureUnion,<class 'sklearn.pipeline.FeatureUnion'>,transformer,<class 'sklearn.pipeline.FeatureUnion'>,sklearn.pipeline.FeatureUnion,pipeline,FeatureUnion,,,
FunctionTransformer,<class 'sklearn.preprocessing._function_transformer.FunctionTransformer'>,transformer,<class 'sklearn.preprocessing._function_transformer.FunctionTransformer'>,sklearn.preprocessing._function_transformer.FunctionTransformer,preprocessing,_function_transformer,FunctionTransformer,,"['accept_sparse', 'check_inverse', 'feature_names_out', 'func', 'inv_kw_args', 'inverse_func', 'kw_args', 'validate']"
GaussianRandomProjection,<class 'sklearn.random_projection.GaussianRandomProjection'>,transformer,<class 'sklearn.random_projection.GaussianRandomProjection'>,sklearn.random_projection.GaussianRandomProjection,random_projection,GaussianRandomProjection,,,"['compute_inverse_components', 'eps', 'n_components', 'random_state']"
GenericUnivariateSelect,<class 'sklearn.feature_selection._univariate_selection.GenericUnivariateSelect'>,transformer,<class 'sklearn.feature_selection._univariate_selection.GenericUnivariateSelect'>,sklearn.feature_selection._univariate_selection.GenericUnivariateSelect,feature_selection,_univariate_selection,GenericUnivariateSelect,,"['mode', 'param', 'score_func']"
HashingVectorizer,<class 'sklearn.feature_extraction.text.HashingVectorizer'>,transformer,<class 'sklearn.feature_extraction.text.HashingVectorizer'>,sklearn.feature_extraction.text.HashingVectorizer,feature_extraction,text,HashingVectorizer,,"['alternate_sign', 'analyzer', 'binary', 'decode_error', 'dtype', 'encoding', 'input', 'lowercase', 'n_features', 'ngram_range', 'norm', 'preprocessor', 'stop_words', 'strip_accents', 'token_pattern', 'tokenizer']"
IncrementalPCA,<class 'sklearn.decomposition._incremental_pca.IncrementalPCA'>,transformer,<class 'sklearn.decomposition._incremental_pca.IncrementalPCA'>,sklearn.decomposition._incremental_pca.IncrementalPCA,decomposition,_incremental_pca,IncrementalPCA,,"['batch_size', 'copy', 'n_components', 'whiten']"
Isomap,<class 'sklearn.manifold._isomap.Isomap'>,transformer,<class 'sklearn.manifold._isomap.Isomap'>,sklearn.manifold._isomap.Isomap,manifold,_isomap,Isomap,,"['eigen_solver', 'max_iter', 'metric', 'metric_params', 'n_components', 'n_jobs', 'n_neighbors', 'neighbors_algorithm', 'p', 'path_method', 'radius', 'tol']"
KBinsDiscretizer,<class 'sklearn.preprocessing._discretization.KBinsDiscretizer'>,transformer,<class 'sklearn.preprocessing._discretization.KBinsDiscretizer'>,sklearn.preprocessing._discretization.KBinsDiscretizer,preprocessing,_discretization,KBinsDiscretizer,,"['dtype', 'encode', 'n_bins', 'random_state', 'strategy', 'subsample']"
KNNImputer,<class 'sklearn.impute._knn.KNNImputer'>,transformer,<class 'sklearn.impute._knn.KNNImputer'>,sklearn.impute._knn.KNNImputer,impute,_knn,KNNImputer,,"['add_indicator', 'copy', 'metric', 'missing_values', 'n_neighbors', 'weights']"
KNeighborsTransformer,<class 'sklearn.neighbors._graph.KNeighborsTransformer'>,transformer,<class 'sklearn.neighbors._graph.KNeighborsTransformer'>,sklearn.neighbors._graph.KNeighborsTransformer,neighbors,_graph,KNeighborsTransformer,,"['algorithm', 'leaf_size', 'metric', 'metric_params', 'mode', 'n_jobs', 'n_neighbors', 'p']"
KernelCenterer,<class 'sklearn.preprocessing._data.KernelCenterer'>,transformer,<class 'sklearn.preprocessing._data.KernelCenterer'>,sklearn.preprocessing._data.KernelCenterer,preprocessing,_data,KernelCenterer,,[]
KernelPCA,<class 'sklearn.decomposition._kernel_pca.KernelPCA'>,transformer,<class 'sklearn.decomposition._kernel_pca.KernelPCA'>,sklearn.decomposition._kernel_pca.KernelPCA,decomposition,_kernel_pca,KernelPCA,,"['alpha', 'coef0', 'copy_X', 'degree', 'eigen_solver', 'fit_inverse_transform', 'gamma', 'iterated_power', 'kernel', 'kernel_params', 'max_iter', 'n_components', 'n_jobs', 'random_state', 'remove_zero_eig', 'tol']"
LabelBinarizer,<class 'sklearn.preprocessing._label.LabelBinarizer'>,transformer,<class 'sklearn.preprocessing._label.LabelBinarizer'>,sklearn.preprocessing._label.LabelBinarizer,preprocessing,_label,LabelBinarizer,,"['neg_label', 'pos_label', 'sparse_output']"
LabelEncoder,<class 'sklearn.preprocessing._label.LabelEncoder'>,transformer,<class 'sklearn.preprocessing._label.LabelEncoder'>,sklearn.preprocessing._label.LabelEncoder,preprocessing,_label,LabelEncoder,,[]
LatentDirichletAllocation,<class 'sklearn.decomposition._lda.LatentDirichletAllocation'>,transformer,<class 'sklearn.decomposition._lda.LatentDirichletAllocation'>,sklearn.decomposition._lda.LatentDirichletAllocation,decomposition,_lda,LatentDirichletAllocation,,"['batch_size', 'doc_topic_prior', 'evaluate_every', 'learning_decay', 'learning_method', 'learning_offset', 'max_doc_update_iter', 'max_iter', 'mean_change_tol', 'n_components', 'n_jobs', 'perp_tol', 'random_state', 'topic_word_prior', 'total_samples', 'verbose']"
LocallyLinearEmbedding,<class 'sklearn.manifold._locally_linear.LocallyLinearEmbedding'>,transformer,<class 'sklearn.manifold._locally_linear.LocallyLinearEmbedding'>,sklearn.manifold._locally_linear.LocallyLinearEmbedding,manifold,_locally_linear,LocallyLinearEmbedding,,"['eigen_solver', 'hessian_tol', 'max_iter', 'method', 'modified_tol', 'n_components', 'n_jobs', 'n_neighbors', 'neighbors_algorithm', 'random_state', 'reg', 'tol']"
MaxAbsScaler,<class 'sklearn.preprocessing._data.MaxAbsScaler'>,transformer,<class 'sklearn.preprocessing._data.MaxAbsScaler'>,sklearn.preprocessing._data.MaxAbsScaler,preprocessing,_data,MaxAbsScaler,,['copy']
MinMaxScaler,<class 'sklearn.preprocessing._data.MinMaxScaler'>,transformer,<class 'sklearn.preprocessing._data.MinMaxScaler'>,sklearn.preprocessing._data.MinMaxScaler,preprocessing,_data,MinMaxScaler,,"['clip', 'copy', 'feature_range']"
MiniBatchDictionaryLearning,<class 'sklearn.decomposition._dict_learning.MiniBatchDictionaryLearning'>,transformer,<class 'sklearn.decomposition._dict_learning.MiniBatchDictionaryLearning'>,sklearn.decomposition._dict_learning.MiniBatchDictionaryLearning,decomposition,_dict_learning,MiniBatchDictionaryLearning,,"['alpha', 'batch_size', 'callback', 'dict_init', 'fit_algorithm', 'max_iter', 'max_no_improvement', 'n_components', 'n_iter', 'n_jobs', 'positive_code', 'positive_dict', 'random_state', 'shuffle', 'split_sign', 'tol', 'transform_algorithm', 'transform_alpha', 'transform_max_iter', 'transform_n_nonzero_coefs', 'verbose']"
MiniBatchNMF,<class 'sklearn.decomposition._nmf.MiniBatchNMF'>,transformer,<class 'sklearn.decomposition._nmf.MiniBatchNMF'>,sklearn.decomposition._nmf.MiniBatchNMF,decomposition,_nmf,MiniBatchNMF,,"['alpha_H', 'alpha_W', 'batch_size', 'beta_loss', 'forget_factor', 'fresh_restarts', 'fresh_restarts_max_iter', 'init', 'l1_ratio', 'max_iter', 'max_no_improvement', 'n_components', 'random_state', 'tol', 'transform_max_iter', 'verbose']"
MiniBatchSparsePCA,<class 'sklearn.decomposition._sparse_pca.MiniBatchSparsePCA'>,transformer,<class 'sklearn.decomposition._sparse_pca.MiniBatchSparsePCA'>,sklearn.decomposition._sparse_pca.MiniBatchSparsePCA,decomposition,_sparse_pca,MiniBatchSparsePCA,,"['alpha', 'batch_size', 'callback', 'method', 'n_components', 'n_iter', 'n_jobs', 'random_state', 'ridge_alpha', 'shuffle', 'verbose']"
MissingIndicator,<class 'sklearn.impute._base.MissingIndicator'>,transformer,<class 'sklearn.impute._base.MissingIndicator'>,sklearn.impute._base.MissingIndicator,impute,_base,MissingIndicator,,"['error_on_new', 'features', 'missing_values', 'sparse']"
MultiLabelBinarizer,<class 'sklearn.preprocessing._label.MultiLabelBinarizer'>,transformer,<class 'sklearn.preprocessing._label.MultiLabelBinarizer'>,sklearn.preprocessing._label.MultiLabelBinarizer,preprocessing,_label,MultiLabelBinarizer,,"['classes', 'sparse_output']"
NMF,<class 'sklearn.decomposition._nmf.NMF'>,transformer,<class 'sklearn.decomposition._nmf.NMF'>,sklearn.decomposition._nmf.NMF,decomposition,_nmf,NMF,,"['alpha', 'alpha_H', 'alpha_W', 'beta_loss', 'init', 'l1_ratio', 'max_iter', 'n_components', 'random_state', 'regularization', 'shuffle', 'solver', 'tol', 'verbose']"
NeighborhoodComponentsAnalysis,<class 'sklearn.neighbors._nca.NeighborhoodComponentsAnalysis'>,transformer,<class 'sklearn.neighbors._nca.NeighborhoodComponentsAnalysis'>,sklearn.neighbors._nca.NeighborhoodComponentsAnalysis,neighbors,_nca,NeighborhoodComponentsAnalysis,,"['callback', 'init', 'max_iter', 'n_components', 'random_state', 'tol', 'verbose', 'warm_start']"
Normalizer,<class 'sklearn.preprocessing._data.Normalizer'>,transformer,<class 'sklearn.preprocessing._data.Normalizer'>,sklearn.preprocessing._data.Normalizer,preprocessing,_data,Normalizer,,"['copy', 'norm']"
Nystroem,<class 'sklearn.kernel_approximation.Nystroem'>,transformer,<class 'sklearn.kernel_approximation.Nystroem'>,sklearn.kernel_approximation.Nystroem,kernel_approximation,Nystroem,,,"['coef0', 'degree', 'gamma', 'kernel', 'kernel_params', 'n_components', 'n_jobs', 'random_state']"
OneHotEncoder,<class 'sklearn.preprocessing._encoders.OneHotEncoder'>,transformer,<class 'sklearn.preprocessing._encoders.OneHotEncoder'>,sklearn.preprocessing._encoders.OneHotEncoder,preprocessing,_encoders,OneHotEncoder,,"['categories', 'drop', 'dtype', 'handle_unknown', 'max_categories', 'min_frequency', 'sparse']"
OrdinalEncoder,<class 'sklearn.preprocessing._encoders.OrdinalEncoder'>,transformer,<class 'sklearn.preprocessing._encoders.OrdinalEncoder'>,sklearn.preprocessing._encoders.OrdinalEncoder,preprocessing,_encoders,OrdinalEncoder,,"['categories', 'dtype', 'encoded_missing_value', 'handle_unknown', 'unknown_value']"
PCA,<class 'sklearn.decomposition._pca.PCA'>,transformer,<class 'sklearn.decomposition._pca.PCA'>,sklearn.decomposition._pca.PCA,decomposition,_pca,PCA,,"['copy', 'iterated_power', 'n_components', 'n_oversamples', 'power_iteration_normalizer', 'random_state', 'svd_solver', 'tol', 'whiten']"
PLSSVD,<class 'sklearn.cross_decomposition._pls.PLSSVD'>,transformer,<class 'sklearn.cross_decomposition._pls.PLSSVD'>,sklearn.cross_decomposition._pls.PLSSVD,cross_decomposition,_pls,PLSSVD,,"['copy', 'n_components', 'scale']"
PatchExtractor,<class 'sklearn.feature_extraction.image.PatchExtractor'>,transformer,<class 'sklearn.feature_extraction.image.PatchExtractor'>,sklearn.feature_extraction.image.PatchExtractor,feature_extraction,image,PatchExtractor,,"['max_patches', 'patch_size', 'random_state']"
PolynomialCountSketch,<class 'sklearn.kernel_approximation.PolynomialCountSketch'>,transformer,<class 'sklearn.kernel_approximation.PolynomialCountSketch'>,sklearn.kernel_approximation.PolynomialCountSketch,kernel_approximation,PolynomialCountSketch,,,"['coef0', 'degree', 'gamma', 'n_components', 'random_state']"
PolynomialFeatures,<class 'sklearn.preprocessing._polynomial.PolynomialFeatures'>,transformer,<class 'sklearn.preprocessing._polynomial.PolynomialFeatures'>,sklearn.preprocessing._polynomial.PolynomialFeatures,preprocessing,_polynomial,PolynomialFeatures,,"['degree', 'include_bias', 'interaction_only', 'order']"
PowerTransformer,<class 'sklearn.preprocessing._data.PowerTransformer'>,transformer,<class 'sklearn.preprocessing._data.PowerTransformer'>,sklearn.preprocessing._data.PowerTransformer,preprocessing,_data,PowerTransformer,,"['copy', 'method', 'standardize']"
QuantileTransformer,<class 'sklearn.preprocessing._data.QuantileTransformer'>,transformer,<class 'sklearn.preprocessing._data.QuantileTransformer'>,sklearn.preprocessing._data.QuantileTransformer,preprocessing,_data,QuantileTransformer,,"['copy', 'ignore_implicit_zeros', 'n_quantiles', 'output_distribution', 'random_state', 'subsample']"
RBFSampler,<class 'sklearn.kernel_approximation.RBFSampler'>,transformer,<class 'sklearn.kernel_approximation.RBFSampler'>,sklearn.kernel_approximation.RBFSampler,kernel_approximation,RBFSampler,,,"['gamma', 'n_components', 'random_state']"
RFE,<class 'sklearn.feature_selection._rfe.RFE'>,transformer,<class 'sklearn.feature_selection._rfe.RFE'>,sklearn.feature_selection._rfe.RFE,feature_selection,_rfe,RFE,,
RFECV,<class 'sklearn.feature_selection._rfe.RFECV'>,transformer,<class 'sklearn.feature_selection._rfe.RFECV'>,sklearn.feature_selection._rfe.RFECV,feature_selection,_rfe,RFECV,,
RadiusNeighborsTransformer,<class 'sklearn.neighbors._graph.RadiusNeighborsTransformer'>,transformer,<class 'sklearn.neighbors._graph.RadiusNeighborsTransformer'>,sklearn.neighbors._graph.RadiusNeighborsTransformer,neighbors,_graph,RadiusNeighborsTransformer,,"['algorithm', 'leaf_size', 'metric', 'metric_params', 'mode', 'n_jobs', 'p', 'radius']"
RandomTreesEmbedding,<class 'sklearn.ensemble._forest.RandomTreesEmbedding'>,transformer,<class 'sklearn.ensemble._forest.RandomTreesEmbedding'>,sklearn.ensemble._forest.RandomTreesEmbedding,ensemble,_forest,RandomTreesEmbedding,,"['max_depth', 'max_leaf_nodes', 'min_impurity_decrease', 'min_samples_leaf', 'min_samples_split', 'min_weight_fraction_leaf', 'n_estimators', 'n_jobs', 'random_state', 'sparse_output', 'verbose', 'warm_start']"
RobustScaler,<class 'sklearn.preprocessing._data.RobustScaler'>,transformer,<class 'sklearn.preprocessing._data.RobustScaler'>,sklearn.preprocessing._data.RobustScaler,preprocessing,_data,RobustScaler,,"['copy', 'quantile_range', 'unit_variance', 'with_centering', 'with_scaling']"
SelectFdr,<class 'sklearn.feature_selection._univariate_selection.SelectFdr'>,transformer,<class 'sklearn.feature_selection._univariate_selection.SelectFdr'>,sklearn.feature_selection._univariate_selection.SelectFdr,feature_selection,_univariate_selection,SelectFdr,,"['alpha', 'score_func']"
SelectFpr,<class 'sklearn.feature_selection._univariate_selection.SelectFpr'>,transformer,<class 'sklearn.feature_selection._univariate_selection.SelectFpr'>,sklearn.feature_selection._univariate_selection.SelectFpr,feature_selection,_univariate_selection,SelectFpr,,"['alpha', 'score_func']"
SelectFromModel,<class 'sklearn.feature_selection._from_model.SelectFromModel'>,transformer,<class 'sklearn.feature_selection._from_model.SelectFromModel'>,sklearn.feature_selection._from_model.SelectFromModel,feature_selection,_from_model,SelectFromModel,,
SelectFwe,<class 'sklearn.feature_selection._univariate_selection.SelectFwe'>,transformer,<class 'sklearn.feature_selection._univariate_selection.SelectFwe'>,sklearn.feature_selection._univariate_selection.SelectFwe,feature_selection,_univariate_selection,SelectFwe,,"['alpha', 'score_func']"
SelectKBest,<class 'sklearn.feature_selection._univariate_selection.SelectKBest'>,transformer,<class 'sklearn.feature_selection._univariate_selection.SelectKBest'>,sklearn.feature_selection._univariate_selection.SelectKBest,feature_selection,_univariate_selection,SelectKBest,,"['k', 'score_func']"
SelectPercentile,<class 'sklearn.feature_selection._univariate_selection.SelectPercentile'>,transformer,<class 'sklearn.feature_selection._univariate_selection.SelectPercentile'>,sklearn.feature_selection._univariate_selection.SelectPercentile,feature_selection,_univariate_selection,SelectPercentile,,"['percentile', 'score_func']"
SequentialFeatureSelector,<class 'sklearn.feature_selection._sequential.SequentialFeatureSelector'>,transformer,<class 'sklearn.feature_selection._sequential.SequentialFeatureSelector'>,sklearn.feature_selection._sequential.SequentialFeatureSelector,feature_selection,_sequential,SequentialFeatureSelector,,
SimpleImputer,<class 'sklearn.impute._base.SimpleImputer'>,transformer,<class 'sklearn.impute._base.SimpleImputer'>,sklearn.impute._base.SimpleImputer,impute,_base,SimpleImputer,,"['add_indicator', 'copy', 'fill_value', 'missing_values', 'strategy', 'verbose']"
SkewedChi2Sampler,<class 'sklearn.kernel_approximation.SkewedChi2Sampler'>,transformer,<class 'sklearn.kernel_approximation.SkewedChi2Sampler'>,sklearn.kernel_approximation.SkewedChi2Sampler,kernel_approximation,SkewedChi2Sampler,,,"['n_components', 'random_state', 'skewedness']"
SparseCoder,<class 'sklearn.decomposition._dict_learning.SparseCoder'>,transformer,<class 'sklearn.decomposition._dict_learning.SparseCoder'>,sklearn.decomposition._dict_learning.SparseCoder,decomposition,_dict_learning,SparseCoder,,
SparsePCA,<class 'sklearn.decomposition._sparse_pca.SparsePCA'>,transformer,<class 'sklearn.decomposition._sparse_pca.SparsePCA'>,sklearn.decomposition._sparse_pca.SparsePCA,decomposition,_sparse_pca,SparsePCA,,"['U_init', 'V_init', 'alpha', 'max_iter', 'method', 'n_components', 'n_jobs', 'random_state', 'ridge_alpha', 'tol', 'verbose']"
SparseRandomProjection,<class 'sklearn.random_projection.SparseRandomProjection'>,transformer,<class 'sklearn.random_projection.SparseRandomProjection'>,sklearn.random_projection.SparseRandomProjection,random_projection,SparseRandomProjection,,,"['compute_inverse_components', 'dense_output', 'density', 'eps', 'n_components', 'random_state']"
SplineTransformer,<class 'sklearn.preprocessing._polynomial.SplineTransformer'>,transformer,<class 'sklearn.preprocessing._polynomial.SplineTransformer'>,sklearn.preprocessing._polynomial.SplineTransformer,preprocessing,_polynomial,SplineTransformer,,"['degree', 'extrapolation', 'include_bias', 'knots', 'n_knots', 'order']"
StandardScaler,<class 'sklearn.preprocessing._data.StandardScaler'>,transformer,<class 'sklearn.preprocessing._data.StandardScaler'>,sklearn.preprocessing._data.StandardScaler,preprocessing,_data,StandardScaler,,"['copy', 'with_mean', 'with_std']"
TSNE,<class 'sklearn.manifold._t_sne.TSNE'>,transformer,<class 'sklearn.manifold._t_sne.TSNE'>,sklearn.manifold._t_sne.TSNE,manifold,_t_sne,TSNE,,"['angle', 'early_exaggeration', 'init', 'learning_rate', 'method', 'metric', 'metric_params', 'min_grad_norm', 'n_components', 'n_iter', 'n_iter_without_progress', 'n_jobs', 'perplexity', 'random_state', 'square_distances', 'verbose']"
TargetEncoder,<class 'sklearn.preprocessing._target_encoder.TargetEncoder'>,transformer,<class 'sklearn.preprocessing._target_encoder.TargetEncoder'>,sklearn.preprocessing._target_encoder.TargetEncoder,preprocessing,_target_encoder,TargetEncoder,,
TfidfTransformer,<class 'sklearn.feature_extraction.text.TfidfTransformer'>,transformer,<class 'sklearn.feature_extraction.text.TfidfTransformer'>,sklearn.feature_extraction.text.TfidfTransformer,feature_extraction,text,TfidfTransformer,,"['norm', 'smooth_idf', 'sublinear_tf', 'use_idf']"
TruncatedSVD,<class 'sklearn.decomposition._truncated_svd.TruncatedSVD'>,transformer,<class 'sklearn.decomposition._truncated_svd.TruncatedSVD'>,sklearn.decomposition._truncated_svd.TruncatedSVD,decomposition,_truncated_svd,TruncatedSVD,,"['algorithm', 'n_components', 'n_iter', 'n_oversamples', 'power_iteration_normalizer', 'random_state', 'tol']"
VarianceThreshold,<class 'sklearn.feature_selection._variance_threshold.VarianceThreshold'>,transformer,<class 'sklearn.feature_selection._variance_threshold.VarianceThreshold'>,sklearn.feature_selection._variance_threshold.VarianceThreshold,feature_selection,_variance_threshold,VarianceThreshold,,['threshold']
BayesianGaussianMixture,<class 'sklearn.mixture._bayesian_mixture.BayesianGaussianMixture'>,All,<class 'sklearn.mixture._bayesian_mixture.BayesianGaussianMixture'>,sklearn.mixture._bayesian_mixture.BayesianGaussianMixture,mixture,_bayesian_mixture,BayesianGaussianMixture,,"['covariance_prior', 'covariance_type', 'degrees_of_freedom_prior', 'init_params', 'max_iter', 'mean_precision_prior', 'mean_prior', 'n_components', 'n_init', 'random_state', 'reg_covar', 'tol', 'verbose', 'verbose_interval', 'warm_start', 'weight_concentration_prior', 'weight_concentration_prior_type']"
CountVectorizer,<class 'sklearn.feature_extraction.text.CountVectorizer'>,All,<class 'sklearn.feature_extraction.text.CountVectorizer'>,sklearn.feature_extraction.text.CountVectorizer,feature_extraction,text,CountVectorizer,,"['analyzer', 'binary', 'decode_error', 'dtype', 'encoding', 'input', 'lowercase', 'max_df', 'max_features', 'min_df', 'ngram_range', 'preprocessor', 'stop_words', 'strip_accents', 'token_pattern', 'tokenizer', 'vocabulary']"
EllipticEnvelope,<class 'sklearn.covariance._elliptic_envelope.EllipticEnvelope'>,All,<class 'sklearn.covariance._elliptic_envelope.EllipticEnvelope'>,sklearn.covariance._elliptic_envelope.EllipticEnvelope,covariance,_elliptic_envelope,EllipticEnvelope,,"['assume_centered', 'contamination', 'random_state', 'store_precision', 'support_fraction']"
EmpiricalCovariance,<class 'sklearn.covariance._empirical_covariance.EmpiricalCovariance'>,All,<class 'sklearn.covariance._empirical_covariance.EmpiricalCovariance'>,sklearn.covariance._empirical_covariance.EmpiricalCovariance,covariance,_empirical_covariance,EmpiricalCovariance,,"['assume_centered', 'store_precision']"
FrozenEstimator,<class 'sklearn.frozen._frozen.FrozenEstimator'>,All,<class 'sklearn.frozen._frozen.FrozenEstimator'>,sklearn.frozen._frozen.FrozenEstimator,frozen,_frozen,FrozenEstimator,,
GaussianMixture,<class 'sklearn.mixture._gaussian_mixture.GaussianMixture'>,All,<class 'sklearn.mixture._gaussian_mixture.GaussianMixture'>,sklearn.mixture._gaussian_mixture.GaussianMixture,mixture,_gaussian_mixture,GaussianMixture,,"['covariance_type', 'init_params', 'max_iter', 'means_init', 'n_components', 'n_init', 'precisions_init', 'random_state', 'reg_covar', 'tol', 'verbose', 'verbose_interval', 'warm_start', 'weights_init']"
GraphicalLasso,<class 'sklearn.covariance._graph_lasso.GraphicalLasso'>,All,<class 'sklearn.covariance._graph_lasso.GraphicalLasso'>,sklearn.covariance._graph_lasso.GraphicalLasso,covariance,_graph_lasso,GraphicalLasso,,"['alpha', 'assume_centered', 'enet_tol', 'max_iter', 'mode', 'tol', 'verbose']"
GraphicalLassoCV,<class 'sklearn.covariance._graph_lasso.GraphicalLassoCV'>,All,<class 'sklearn.covariance._graph_lasso.GraphicalLassoCV'>,sklearn.covariance._graph_lasso.GraphicalLassoCV,covariance,_graph_lasso,GraphicalLassoCV,,"['alphas', 'assume_centered', 'cv', 'enet_tol', 'max_iter', 'mode', 'n_jobs', 'n_refinements', 'tol', 'verbose']"
GridSearchCV,<class 'sklearn.model_selection._search.GridSearchCV'>,All,<class 'sklearn.model_selection._search.GridSearchCV'>,sklearn.model_selection._search.GridSearchCV,model_selection,_search,GridSearchCV,,
IsolationForest,<class 'sklearn.ensemble._iforest.IsolationForest'>,All,<class 'sklearn.ensemble._iforest.IsolationForest'>,sklearn.ensemble._iforest.IsolationForest,ensemble,_iforest,IsolationForest,,"['bootstrap', 'contamination', 'max_features', 'max_samples', 'n_estimators', 'n_jobs', 'random_state', 'verbose', 'warm_start']"
KernelDensity,<class 'sklearn.neighbors._kde.KernelDensity'>,All,<class 'sklearn.neighbors._kde.KernelDensity'>,sklearn.neighbors._kde.KernelDensity,neighbors,_kde,KernelDensity,,"['algorithm', 'atol', 'bandwidth', 'breadth_first', 'kernel', 'leaf_size', 'metric', 'metric_params', 'rtol']"
LedoitWolf,<class 'sklearn.covariance._shrunk_covariance.LedoitWolf'>,All,<class 'sklearn.covariance._shrunk_covariance.LedoitWolf'>,sklearn.covariance._shrunk_covariance.LedoitWolf,covariance,_shrunk_covariance,LedoitWolf,,"['assume_centered', 'block_size', 'store_precision']"
LocalOutlierFactor,<class 'sklearn.neighbors._lof.LocalOutlierFactor'>,All,<class 'sklearn.neighbors._lof.LocalOutlierFactor'>,sklearn.neighbors._lof.LocalOutlierFactor,neighbors,_lof,LocalOutlierFactor,,"['algorithm', 'contamination', 'leaf_size', 'metric', 'metric_params', 'n_jobs', 'n_neighbors', 'novelty', 'p']"
MDS,<class 'sklearn.manifold._mds.MDS'>,All,<class 'sklearn.manifold._mds.MDS'>,sklearn.manifold._mds.MDS,manifold,_mds,MDS,,"['dissimilarity', 'eps', 'max_iter', 'metric', 'n_components', 'n_init', 'n_jobs', 'random_state', 'verbose']"
MinCovDet,<class 'sklearn.covariance._robust_covariance.MinCovDet'>,All,<class 'sklearn.covariance._robust_covariance.MinCovDet'>,sklearn.covariance._robust_covariance.MinCovDet,covariance,_robust_covariance,MinCovDet,,"['assume_centered', 'random_state', 'store_precision', 'support_fraction']"
NearestNeighbors,<class 'sklearn.neighbors._unsupervised.NearestNeighbors'>,All,<class 'sklearn.neighbors._unsupervised.NearestNeighbors'>,sklearn.neighbors._unsupervised.NearestNeighbors,neighbors,_unsupervised,NearestNeighbors,,"['algorithm', 'leaf_size', 'metric', 'metric_params', 'n_jobs', 'n_neighbors', 'p', 'radius']"
OAS,<class 'sklearn.covariance._shrunk_covariance.OAS'>,All,<class 'sklearn.covariance._shrunk_covariance.OAS'>,sklearn.covariance._shrunk_covariance.OAS,covariance,_shrunk_covariance,OAS,,"['assume_centered', 'store_precision']"
OneClassSVM,<class 'sklearn.svm._classes.OneClassSVM'>,All,<class 'sklearn.svm._classes.OneClassSVM'>,sklearn.svm._classes.OneClassSVM,svm,_classes,OneClassSVM,,"['cache_size', 'coef0', 'degree', 'gamma', 'kernel', 'max_iter', 'nu', 'shrinking', 'tol', 'verbose']"
Pipeline,<class 'sklearn.pipeline.Pipeline'>,All,<class 'sklearn.pipeline.Pipeline'>,sklearn.pipeline.Pipeline,pipeline,Pipeline,,,
RandomizedSearchCV,<class 'sklearn.model_selection._search.RandomizedSearchCV'>,All,<class 'sklearn.model_selection._search.RandomizedSearchCV'>,sklearn.model_selection._search.RandomizedSearchCV,model_selection,_search,RandomizedSearchCV,,
SGDOneClassSVM,<class 'sklearn.linear_model._stochastic_gradient.SGDOneClassSVM'>,All,<class 'sklearn.linear_model._stochastic_gradient.SGDOneClassSVM'>,sklearn.linear_model._stochastic_gradient.SGDOneClassSVM,linear_model,_stochastic_gradient,SGDOneClassSVM,,"['average', 'eta0', 'fit_intercept', 'learning_rate', 'max_iter', 'nu', 'power_t', 'random_state', 'shuffle', 'tol', 'verbose', 'warm_start']"
ShrunkCovariance,<class 'sklearn.covariance._shrunk_covariance.ShrunkCovariance'>,All,<class 'sklearn.covariance._shrunk_covariance.ShrunkCovariance'>,sklearn.covariance._shrunk_covariance.ShrunkCovariance,covariance,_shrunk_covariance,ShrunkCovariance,,"['assume_centered', 'shrinkage', 'store_precision']"
SpectralBiclustering,<class 'sklearn.cluster._bicluster.SpectralBiclustering'>,All,<class 'sklearn.cluster._bicluster.SpectralBiclustering'>,sklearn.cluster._bicluster.SpectralBiclustering,cluster,_bicluster,SpectralBiclustering,,"['init', 'method', 'mini_batch', 'n_best', 'n_clusters', 'n_components', 'n_init', 'n_svd_vecs', 'random_state', 'svd_method']"
SpectralCoclustering,<class 'sklearn.cluster._bicluster.SpectralCoclustering'>,All,<class 'sklearn.cluster._bicluster.SpectralCoclustering'>,sklearn.cluster._bicluster.SpectralCoclustering,cluster,_bicluster,SpectralCoclustering,,"['init', 'mini_batch', 'n_clusters', 'n_init', 'n_svd_vecs', 'random_state', 'svd_method']"
SpectralEmbedding,<class 'sklearn.manifold._spectral_embedding.SpectralEmbedding'>,All,<class 'sklearn.manifold._spectral_embedding.SpectralEmbedding'>,sklearn.manifold._spectral_embedding.SpectralEmbedding,manifold,_spectral_embedding,SpectralEmbedding,,"['affinity', 'eigen_solver', 'gamma', 'n_components', 'n_jobs', 'n_neighbors', 'random_state']"
TfidfVectorizer,<class 'sklearn.feature_extraction.text.TfidfVectorizer'>,All,<class 'sklearn.feature_extraction.text.TfidfVectorizer'>,sklearn.feature_extraction.text.TfidfVectorizer,feature_extraction,text,TfidfVectorizer,,"['analyzer', 'binary', 'decode_error', 'dtype', 'encoding', 'input', 'lowercase', 'max_df', 'max_features', 'min_df', 'ngram_range', 'norm', 'preprocessor', 'smooth_idf', 'stop_words', 'strip_accents', 'sublinear_tf', 'token_pattern', 'tokenizer', 'use_idf', 'vocabulary']"
