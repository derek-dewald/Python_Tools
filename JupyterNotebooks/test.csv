,Section,Name,Type,Default,Description,Model,Estimator
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
0,Parameters,estimator,object,None,"The base estimator from which the boosted ensemble is built. Support for sample weighting is required, as well as proper ``classes_`` and ``n_classes_`` attributes. If ``None``, then the base estimator is :class:`~sklearn.tree.DecisionTreeClassifier` initialized with `max_depth=1`. `base_estimator` was renamed to `estimator`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
1,Parameters,n_estimators,int,50,"The maximum number of estimators at which boosting is terminated. In case of perfect fit, the learning procedure is stopped early. Values must be in the range `[1, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
2,Parameters,learning_rate,float,1.0,"Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution of each classifier. There is a trade-off between the `learning_rate` and `n_estimators` parameters. Values must be in the range `(0.0, inf)`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
3,Parameters,algorithm,{'SAMME'},'SAMME',Use the SAMME discrete boosting algorithm. `algorithm` is deprecated and will be removed in version 1.8. This estimator only implements the 'SAMME' algorithm.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
4,Attributes,random_state,int,None,"Controls the random seed given at each `estimator` at each boosting iteration. Thus, it is only used when `estimator` exposes a `random_state`. Pass an int for reproducible output across multiple function calls. See :term:`Glossary <random_state>`.",An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
5,Attributes,estimator_,estimator,,The base estimator from which the ensemble is grown. `base_estimator_` was renamed to `estimator_`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
6,Attributes,estimators_,list of classifiers,,The collection of fitted sub-estimators.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
7,Attributes,classes_,ndarray of shape (n_classes,,The classes labels.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
8,Attributes,n_classes_,int,,The number of classes.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
9,Attributes,estimator_weights_,ndarray of floats,,Weights for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
10,Attributes,estimator_errors_,ndarray of floats,,Classification error for each estimator in the boosted ensemble.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
11,Attributes,feature_importances_,ndarray of shape (n_features,,The impurity-based feature importances if supported by the ``estimator`` (when based on decision trees). Warning: impurity-based feature importances can be misleading for high cardinality features (many unique values). See :func:`sklearn.inspection.permutation_importance` as an alternative.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
12,Attributes,n_features_in_,int,,Number of features seen during :term:`fit`.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
13,,feature_names_in_,ndarray of shape (`n_features_in_`,,Names of features seen during :term:`fit`. Defined only when `X` has feature names that are all strings.,An AdaBoost classifier.,<class 'sklearn.ensemble._weight_boosting.AdaBoostClassifier'>
